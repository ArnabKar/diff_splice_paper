setwd("~/Documents/Projects/DiffTranscriptUsage/analysis/simulations/Rcode")
astalavista.file <- "../human/reference_files/Homo_sapiens.GRCh37.71.protein_coding_sorted.gtf_astalavista.gtf"
final_summary <- "../human/non_null_simulation/3_truth/simulation_details.txt"
final_summary <- read.delim(final_summary, header = TRUE, as.is = TRUE)
library(GenomicRanges)
library(GenomicFeatures)
library(Hmisc)
library(dplyr)
library(rtracklayer)
gene_table <- final_summary %>% group_by(gene_id) %>%
summarise(ds_status = unique(gene_status),
TPM = sum(TPM),
nbr_isoforms = unique(nbr_isoforms),
diff_IsoPct = unique(diff_IsoPct))
gene_table$TPM_2 = cut2(gene_table$TPM, g = 2)
gene_table$TPM_5 = cut2(gene_table$TPM, g = 5)
gene_table$TPM_10 = cut2(gene_table$TPM, g = 10)
gene_table$nbr_isoforms_2 = cut2(gene_table$nbr_isoforms, g = 2)
gene_table$nbr_isoforms_5 = cut2(gene_table$nbr_isoforms, g = 5)
gene_table$nbr_isoforms_10 = cut2(gene_table$nbr_isoforms, g = 10)
gene_table$diff_IsoPct_2 = cut2(gene_table$diff_IsoPct, g = 2)
gene_table$diff_IsoPct_5 = cut2(gene_table$diff_IsoPct, g = 5)
gene_table$diff_IsoPct_10 = cut2(gene_table$diff_IsoPct, g = 10)
astalavista <- read.delim(astalavista.file, header = FALSE, as.is = TRUE)
av <- t(sapply(astalavista[, 9], function(w) {
tmp <- unlist(strsplit(w, ";"))
a <- gsub(" ", "", gsub("structure ", "", tmp[grep("structure", tmp)]))
b <- gsub("transcript_id ", "", tmp[grep("transcript_id", tmp)])
b1 <- paste(sort(unlist(strsplit(b, ","))), collapse = ";")
c(a, b1)
}))
rownames(av) <- NULL
colnames(av) <- c("as_type", "transcripts")
av <- as.data.frame(av, stringsAsFactors = FALSE)
head(av)
head(astalavista)
length(av[, 2])
length(grep("/", av[, 2]))
av1 <- av[-grep("/", av[, 2]), ]
av2 <- av[grep("/", av[, 2]), ]
?grep
myfun = function(mystr) {
mm = lapply(strsplit(mystr, ";"), strsplit, split = "/")
mm2 = expand.grid(mm[[1]][[1]], mm[[1]][[2]], stringsAsFactors = FALSE)
sapply(1:nrow(mm2), function(i) paste(sort(mm2[i, ]), collapse = ":"))
}
tmp_trs <- lapply(av2[, 2], myfun)
names(tmp_trs) <- av2[, 1]
tmp_trs <- stack(tmp_trs)
colnames(tmp_trs) <- c("transcripts", "as_type1")
tmp_trs <- tmp_trs %>% group_by(transcripts) %>%
summarise(as_type = paste(as_type1, collapse = ":"))
head(tmp_trs)
tail(tmp_trs)
head(av1)
tmp_trs <- tmp_trs[, c("as_type", "transcripts")]
head(tmp_trs)
av <- rbind(av1, tmp_trs)
dim(av)
head(av)
tail(av)
ds_transcripts <- subset(final_summary, transcript_status == 1) %>%
group_by(gene_id) %>%
summarise(transcripts = paste(sort(transcript_id), collapse = ";"))
ds_transcripts$as_type <- av$as_type[match(ds_transcripts$transcripts, av$transcripts)]
head(ds_transcripts)
av$transcripts <- gsub(":", ";", av$transcripts)
ds_transcripts$as_type <- av$as_type[match(ds_transcripts$transcripts, av$transcripts)]
head(ds_transcripts)
sum(is.na(ds_transcripts$as_type))
g <- grep("ENST00000233156", astalavista[, 9])
g
g2 <- grep("ENST00000426055", astalavista[, 9])
g2
intersect(g,g2)
astalavista[intersect(g,g2),]
head(av2)
g <- grep("ENST00000233156", av2[, 2])
g2 <- grep("ENST00000426055", av2[, 2])
g
g2
av2[intersect(g,g2),]
mytmp <- av2[intersect(g,g2),]
lapply(mytmp[, 2], myfun)
rm(list=ls())
astalavista <- read.delim("../human/reference_files/Homo_sapiens.GRCh37.71.protein_coding_sorted.gtf_astalavista.gtf")
final_summary <- read.delim("../human/non_null_simulation/3_truth/simulation_details.txt", header = TRUE, as.is = TRUE)
gene_table <- final_summary %>% group_by(gene_id) %>%
summarise(ds_status = unique(gene_status),
TPM = sum(TPM),
nbr_isoforms = unique(nbr_isoforms),
diff_IsoPct = unique(diff_IsoPct))
gene_table$TPM_2 = cut2(gene_table$TPM, g = 2)
gene_table$TPM_5 = cut2(gene_table$TPM, g = 5)
gene_table$TPM_10 = cut2(gene_table$TPM, g = 10)
gene_table$nbr_isoforms_2 = cut2(gene_table$nbr_isoforms, g = 2)
gene_table$nbr_isoforms_5 = cut2(gene_table$nbr_isoforms, g = 5)
gene_table$nbr_isoforms_10 = cut2(gene_table$nbr_isoforms, g = 10)
gene_table$diff_IsoPct_2 = cut2(gene_table$diff_IsoPct, g = 2)
gene_table$diff_IsoPct_5 = cut2(gene_table$diff_IsoPct, g = 5)
gene_table$diff_IsoPct_10 = cut2(gene_table$diff_IsoPct, g = 10)
astalavista <- read.delim("../human/reference_files/Homo_sapiens.GRCh37.71.protein_coding_sorted.gtf_astalavista.gtf", header = FALSE, as.is = TRUE)
av <- t(sapply(astalavista[, 9], function(w) {
tmp <- unlist(strsplit(w, ";"))
a <- gsub(" ", "", gsub("structure ", "", tmp[grep("structure", tmp)]))
b <- gsub("transcript_id ", "", tmp[grep("transcript_id", tmp)])
b1 <- paste(sort(unlist(strsplit(b, ","))), collapse = ";")
c(a, b1)
}))
rownames(av) <- NULL
colnames(av) <- c("as_type", "transcripts")
av <- as.data.frame(av, stringsAsFactors = FALSE)
av1 <- av[-grep("/", av[, 2]), ]
av2 <- av[grep("/", av[, 2]), ]
myfun = function(mystr) {
mm = lapply(strsplit(mystr, ";"), strsplit, split = "/")
mm2 = expand.grid(mm[[1]][[1]], mm[[1]][[2]], stringsAsFactors = FALSE)
sapply(1:nrow(mm2), function(i) paste(sort(mm2[i, ]), collapse = ";"))
}
tmp_trs <- lapply(av2[, 2], myfun)
names(tmp_trs) <- av2[, 1]
tmp_trs <- stack(tmp_trs)
colnames(tmp_trs) <- c("transcripts", "as_type1")
tmp_trs <- tmp_trs %>% group_by(transcripts) %>%
summarise(as_type = paste(as_type1, collapse = ":"))
tmp_trs <- tmp_trs[, c("as_type", "transcripts")]
av <- rbind(av1, tmp_trs)
ds_transcripts <- subset(final_summary, transcript_status == 1) %>%
group_by(gene_id) %>%
summarise(transcripts = paste(sort(transcript_id), collapse = ";"))
ds_transcripts$as_type <- av$as_type[match(ds_transcripts$transcripts, av$transcripts)]
head(ds_transcripts)
sum(is.na(ds_transcripts[,2]))
gene_table <- merge(gene_table, ds_transcripts[, c("gene_id", "as_type")],
by.x = "gene_id", by.y = "gene_id", all = TRUE)
head(gene_table)
table(gene_table$as_type)->tbl1
tbl1 <- sort(tbl1, decreasing = TRUE)
head(tbl1)
length(grep(":", names(tbl1)))
length(names(tbl1))
head(tbl1,n=20)
sum(tbl1)
m <- gene_table[gene_table$ds_status==1,]
dim(m)
head(m)
m$as_type
sum(is.na(m$as_type))
head(ds_transcripts)
m[988,]
ds_transcripts[ds_transcripts$gene_id == "ENSG00000232637",]
sum(is.na(ds_transcripts$as_type))
sum(is.na(ds_transcripts[,2]))
head(ds_transcripts[,2])
head(ds_transcripts)
library(edgeR)
?exactTest
?glmLRT
nlibs <- 3
ngenes <- 100
dispersion.true <- 0.1
# Make first gene respond to covariate x
x <- 0:2
design <- model.matrix(~x)
beta.true <- cbind(Beta1=2,Beta2=c(2,rep(0,ngenes-1)))
mu.true <- 2^(beta.true %*% t(design))
# Generate count data
y <- rnbinom(ngenes*nlibs,mu=mu.true,size=1/dispersion.true)
y <- matrix(y,ngenes,nlibs)
colnames(y) <- c("x0","x1","x2")
rownames(y) <- paste("gene",1:ngenes,sep=".")
d <- DGEList(y)
d <- calcNormFactors(d)
# Fit the NB GLMs
fit <- glmFit(d, design, dispersion=dispersion.true)
# Likelihood ratio tests for trend
results <- glmLRT(fit, coef=2)
topTags(results)
head(as.logical(decideTestsDGE(results, p.value=0.05)))
head(rownames(results)[as.logical(decideTestsDGE(results, p.value=0.05))])
head(rownames(results)[as.logical(decideTestsDGE(results, p.value=0.5))])
library(edgeR)
library(phyloseq)
filepath <- system.file("extdata", "study_1457_split_library_seqs_and_mapping.zip",
package = "phyloseq")
kostic <- microbio_me_qiime(filepath)
kosticB <- subset_samples(kostic, DIAGNOSIS != "None")
rs <- rowSums(otu_table(kosticB))
cs <- colSums(otu_table(kosticB))
hist(rs)
hist(log10(rs + 1))
hist(log10(cs + 1))
row_sums <- rowSums(otu_table(kosticB))
col_sums <- colSums(otu_table(kosticB))
hist(log10(row_sums + 1))
summary(row_sums)
hist(log10(col_sums + 1))
summary(col_sums)
kosticp <- transform_sample_counts(kosticB, function(x){x/sum(x)})
hist(log10(apply(otu_table(kosticp), 1, var)),
xlab = "log10(variance)", breaks = 50,
main = "A large fraction of OTUs have very low variance")
varianceThreshold <- 1e-5
keepOTUs <- names(which(apply(otu_table(kosticp), 1, var) > varianceThreshold))
kosticVar <- prune_taxa(keepOTUs, kosticB)
kosticVar
keepOTUs <- names(which(rowSums(otu_table(kosticB)) > 1))
keepOTUs <- names(which(rowSums(otu_table(kosticB)) > 1))
kosticCount <- prune_taxa(keepOTUs, kosticB)
kosticCount
taxa_are_rows(kosticVar)
head(data.frame(as.matrix(tax_table(kosticVar))))
kosticB
dge <- DGEList(counts = as.matrix(otu_table(kosticB)),
group = get_variable(kosticB, "DIAGNOSIS"),
genes = data.frame(as.matrix(tax_table(kosticB))))
dge_TMM <- calcNormFactors(dge, method = "TMM")
hist(dge_TMM$samples$norm.factors, breaks = 50)
dge_TMM
dge_TMM$samples
dge_RLE <- calcNormFactors(dge, method = "RLE")
dge_RLE$samples
dgeVar <- DGEList(counts = as.matrix(otu_table(kosticVar)),
group = get_variable(kosticVar, "DIAGNOSIS"),
genes = data.frame(as.matrix(tax_table(kosticVar))))
dgeVar_TMM <- calcNormFactors(dgeVar, method = "TMM")
head(dgeVar_TMM$samples)
hist(dgeVar_TMM$samples$norm.factors, breaks = 50)
plot(dgeVar_TMM$samples$lib.size, dgeVar_TMM$samples$norm.factors, log = "x")
dgeVar_RLE <- calcNormFactors(dgeVar, method = "RLE")
hist(dgeVar_RLE$samples$norm.factors, breaks = 50)
head(dgeVar_RLE)
head(dgeVar_RLE$samples)
head(dge_RLE$samples)
dgeCount_TMM <- calcNormFactors(dgeCount, method = "TMM")
dgeCount <- DGEList(counts = as.matrix(otu_table(kosticCount)),
group = get_variable(kosticCount, "DIAGNOSIS"),
genes = data.frame(as.matrix(tax_table(kosticCount))))
dgeCount_TMM <- calcNormFactors(dgeCount, method = "TMM")
hist(dgeCount_TMM$samples$norm.factors, breaks = 50)
plot(dgeCount_TMM$samples$lib.size, dgeCount_TMM$samples$norm.factors, log = "x")
head(dgeCount_TMM$samples)
dgeCount_RLE <- calcNormFactors(dgeCount, method = "RLE")
head(dgeCount_RLE$samples)
head(dgeVar_RLE$samples)
head(dgeCount_RLE$samples)
col_sums <- colSums(otu_table(kosticB))
hist(log10(col_sums + 1))
idx <- which(colSums(otu_table(kosticB)) > 100)
dge <- dge[, idx]
idx
dge <- DGEList(counts = as.matrix(otu_table(kosticB)),
group = get_variable(kosticB, "DIAGNOSIS"),
genes = data.frame(as.matrix(tax_table(kosticB))))
dge
dim(dge)
idx <- which(colSums(otu_table(kosticB)) > 100)
idx <- which(colSums(dge$counts) > 100)
length(idx)
dge <- dge[, idx]
idx
plot(idx)
dge[, 1:2]
class(dge)
dge[1:2,]
